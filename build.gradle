plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '2.1.0'
    id 'org.jetbrains.kotlin.plugin.lombok' version '2.1.0'
    id 'io.freefair.lombok' version '8.10'
}

group = 'com.CptWetWaffle.SurvivalMode'
version = '0.1'

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.runelite.net'
        content {
            includeGroupByRegex("net\\.runelite.*")
        }
    }
    mavenCentral()
}

kotlin {
    jvmToolchain(11)
}

def runeLiteVersion = 'latest.release'

dependencies {
    compileOnly group: 'net.runelite', name: 'client', version: runeLiteVersion

    implementation 'org.postgresql:postgresql:42.7.2'
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '2.1.0' // Kotlin standard library
    implementation group: 'net.runelite', name: 'skybox', version: runeLiteVersion // Add the plugin as a dependency


    testImplementation 'junit:junit:4.13.1'
    testImplementation group: 'net.runelite', name: 'client', version: runeLiteVersion
    testImplementation group: 'net.runelite', name: 'jshell', version: runeLiteVersion
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(11)
}

tasks.register('shadowJar', Jar) {
    dependsOn configurations.testRuntimeClasspath
    manifest {
        attributes('Main-Class': 'com.CptWetWaffle.SurvivalMode.SurvivalModePluginTest', 'Multi-Release': true)
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from sourceSets.main.output
    from sourceSets.test.output
    from {
        configurations.testRuntimeClasspath.collect {
            file -> file.isDirectory() ? file : zipTree(file)
        }
    }

    exclude 'META-INF/INDEX.LIST'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    exclude '**/module-info.class'

    group = BasePlugin.BUILD_GROUP
    archiveClassifier.set('shadow')
    archiveFileName.set("${rootProject.name}-${project.version}-all.jar")
}
